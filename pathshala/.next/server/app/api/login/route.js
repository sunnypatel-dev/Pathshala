"use strict";(()=>{var e={};e.id=740,e.ids=[740],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},12781:e=>{e.exports=require("stream")},73837:e=>{e.exports=require("util")},84281:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>q,originalPathname:()=>x,patchFetch:()=>v,requestAsyncStorage:()=>f,routeModule:()=>y,serverHooks:()=>S,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>w});var o={};r.r(o),r.d(o,{POST:()=>m});var n=r(51762),s=r(24143),i=r(14876),a=r(53552),u=r(30531),p=r(94922),d=r(64191),l=r.n(d),c=r(81112),g=r.n(c);async function m(e){try{let t=await e.json();console.log(t);let{email:r,password:o}=t,n=await u.Z.findOne({email:r});if(!n)return p.NextResponse.json({message:"User Not Found",success:!1,status:404});if(!await l().compare(o,n.password))return p.NextResponse.json({message:"Invalid Password",success:!1,status:400});let{password:s,...i}=n._doc,a={id:n._id,username:n.username,email:n.email},d=g().sign(a,"slfjskdfowru030nfowe",{expiresIn:"1d"}),c=p.NextResponse.json({message:"Login successful",success:!0,status:200,user:i});return c.cookies.set("token",d,{httpOnly:!0}),c}catch(e){return p.NextResponse.json({error:e.message},{status:500})}}(0,a.$)();let y=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/login/route",pathname:"/api/login",filename:"route",bundlePath:"app/api/login/route"},resolvedPagePath:"G:\\CODSOFT\\pathshala\\src\\app\\api\\login\\route.js",nextConfigOutput:"",userland:o}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:S,headerHooks:q,staticGenerationBailout:w}=y,x="/api/login/route";function v(){return(0,i.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:h})}},53552:(e,t,r)=>{r.d(t,{$:()=>s});var o=r(11185),n=r.n(o);async function s(){try{n().connect("mongodb+srv://sunnypatelkoder:sunnypatelkoder@cluster0.9gjeii7.mongodb.net/pathshala");let e=n().connection;e.on("connected",()=>{console.log("MONOG DB connceted successfully")}),e.on("error",e=>{console.log("MONOGO DB connection erorr. please make sure mongodb is runnign",+e)})}catch(e){console.log("Something went wrong"),console.log(e)}}},30531:(e,t,r)=>{r.d(t,{Z:()=>i});var o=r(11185),n=r.n(o);let s=new(n()).Schema({name:{type:String,required:[!0,"Please Provide a username"]},email:{type:String,required:[!0,"Please Provide a email"],unique:!0},password:{type:String,required:[!0,"Please Provide a password"]},phone:{type:String},photoUrl:{type:String,default:"/default-user.png"},isVerified:{type:Boolean,default:!1},isAdmin:{type:Boolean,default:!1},courses:[{category:{type:String,required:!0},name:{type:String,required:!0},duration:{type:String,required:!0},img1:{type:String,default:"/android.png.webp"},img2:{type:String,default:"/android.png.webp"},description:{type:String,required:!0},syllabus:[{chapter:{type:String,required:!0},topics:[{topicName:{type:String,required:!0},topicLink:{type:String,required:!0},topicProgress:{type:Boolean,default:!1}}]}],progress_status:{type:Number,default:0},createdAt:{type:Date,default:Date.now},certificates:[{certificateId:{type:String}}]}]}),i=n().models.User||n().model("User",s)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[10,716,191,112],()=>r(84281));module.exports=o})();