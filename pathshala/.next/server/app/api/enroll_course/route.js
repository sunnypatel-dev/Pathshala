"use strict";(()=>{var e={};e.id=876,e.ids=[876],e.modules={11185:e=>{e.exports=require("mongoose")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84615:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>S,originalPathname:()=>h,patchFetch:()=>q,requestAsyncStorage:()=>g,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>y,staticGenerationBailout:()=>f});var n={};t.r(n),t.d(n,{POST:()=>l});var o=t(51762),i=t(24143),a=t(14876),s=t(53552),d=t(62002),u=t(30531),p=t(94922);async function l(e){try{let{userId:r,courseId:t}=await e.json();if((await u.Z.findById(r)).courses.some(e=>e._id.toString()===t))return new p.NextResponse("Already Enrolled!",{status:409,headers:{"Content-Type":"text/plain"}});let n=await d.Z.findById(t),o=await u.Z.findByIdAndUpdate(r,{$addToSet:{courses:n}},{new:!0});return p.NextResponse.json({message:"Course Subscribed!",user:o,status:200})}catch(e){return p.NextResponse.json({message:"Internal Error"})}}(0,s.$)();let c=new o.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/enroll_course/route",pathname:"/api/enroll_course",filename:"route",bundlePath:"app/api/enroll_course/route"},resolvedPagePath:"G:\\CODSOFT\\pathshala\\src\\app\\api\\enroll_course\\route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:g,staticGenerationAsyncStorage:y,serverHooks:m,headerHooks:S,staticGenerationBailout:f}=c,h="/api/enroll_course/route";function q(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:y})}},53552:(e,r,t)=>{t.d(r,{$:()=>i});var n=t(11185),o=t.n(n);async function i(){try{o().connect("mongodb+srv://sunnypatelkoder:sunnypatelkoder@cluster0.9gjeii7.mongodb.net/pathshala");let e=o().connection;e.on("connected",()=>{console.log("MONOG DB connceted successfully")}),e.on("error",e=>{console.log("MONOGO DB connection erorr. please make sure mongodb is runnign",+e)})}catch(e){console.log("Something went wrong"),console.log(e)}}},62002:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185),o=t.n(n);let i=new(o()).Schema({category:{type:String,required:!0},name:{type:String,required:!0},duration:{type:String,required:!0},img1:{type:String,default:"/android.png.webp"},img2:{type:String,default:"/android.png.webp"},description:{type:String,required:!0},syllabus:[{chapter:{type:String,required:!0},topics:[{topicName:{type:String,required:!0},topicLink:{type:String,required:!0}}]}]}),a=o().models.Course||o().model("Course",i)},30531:(e,r,t)=>{t.d(r,{Z:()=>a});var n=t(11185),o=t.n(n);let i=new(o()).Schema({name:{type:String,required:[!0,"Please Provide a username"]},email:{type:String,required:[!0,"Please Provide a email"],unique:!0},password:{type:String,required:[!0,"Please Provide a password"]},phone:{type:String},photoUrl:{type:String,default:"/default-user.png"},isVerified:{type:Boolean,default:!1},isAdmin:{type:Boolean,default:!1},courses:[{category:{type:String,required:!0},name:{type:String,required:!0},duration:{type:String,required:!0},img1:{type:String,default:"/android.png.webp"},img2:{type:String,default:"/android.png.webp"},description:{type:String,required:!0},syllabus:[{chapter:{type:String,required:!0},topics:[{topicName:{type:String,required:!0},topicLink:{type:String,required:!0},topicProgress:{type:Boolean,default:!1}}]}],progress_status:{type:Number,default:0},createdAt:{type:Date,default:Date.now},certificates:[{certificateId:{type:String}}]}]}),a=o().models.User||o().model("User",i)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[10,716],()=>t(84615));module.exports=n})();