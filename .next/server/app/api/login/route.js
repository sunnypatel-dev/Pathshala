"use strict";(()=>{var e={};e.id=740,e.ids=[740],e.modules={11185:e=>{e.exports=require("mongoose")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},76162:e=>{e.exports=require("stream")},21764:e=>{e.exports=require("util")},44466:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>x,patchFetch:()=>S,requestAsyncStorage:()=>f,routeModule:()=>y,serverHooks:()=>q,staticGenerationAsyncStorage:()=>h});var s={};r.r(s),r.d(s,{POST:()=>m});var n=r(49303),o=r(88716),i=r(60670),a=r(23248),u=r(90839),p=r(87070),d=r(42023),l=r.n(d),c=r(41482),g=r.n(c);async function m(e){try{let t=await e.json();console.log(t);let{email:r,password:s}=t,n=await u.Z.findOne({email:r});if(!n)return p.NextResponse.json({message:"User Not Found",success:!1,status:404});if(!await l().compare(s,n.password))return p.NextResponse.json({message:"Invalid Password",success:!1,status:400});let{password:o,...i}=n._doc,a={id:n._id,username:n.username,email:n.email},d=g().sign(a,"slfjskdfowru030nfowe",{expiresIn:"1d"}),c=p.NextResponse.json({message:"Login successful",success:!0,status:200,user:i});return c.cookies.set("token",d,{httpOnly:!0}),c}catch(e){return p.NextResponse.json({error:e.message},{status:500})}}(0,a.$)();let y=new n.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/login/route",pathname:"/api/login",filename:"route",bundlePath:"app/api/login/route"},resolvedPagePath:"G:\\NextApp\\pathshala\\Pathshala\\src\\app\\api\\login\\route.js",nextConfigOutput:"",userland:s}),{requestAsyncStorage:f,staticGenerationAsyncStorage:h,serverHooks:q}=y,x="/api/login/route";function S(){return(0,i.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:h})}},23248:(e,t,r)=>{r.d(t,{$:()=>o});var s=r(11185),n=r.n(s);async function o(){try{n().connect("mongodb+srv://sunnypatelkoder:sunnypatelkoder@cluster0.9gjeii7.mongodb.net/pathshala");let e=n().connection;e.on("connected",()=>{console.log("MONOG DB connceted successfully")}),e.on("error",e=>{console.log("MONOGO DB connection erorr. please make sure mongodb is runnign",+e)})}catch(e){console.log("Something went wrong"),console.log(e)}}},90839:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(11185),n=r.n(s);let o=new(n()).Schema({name:{type:String,required:[!0,"Please Provide a username"]},email:{type:String,required:[!0,"Please Provide a email"],unique:!0},password:{type:String,required:[!0,"Please Provide a password"]},phone:{type:String},photoUrl:{type:String,default:"/default-user.png"},isVerified:{type:Boolean,default:!1},isAdmin:{type:Boolean,default:!1},courses:[{category:{type:String,required:!0},name:{type:String,required:!0},duration:{type:String,required:!0},img1:{type:String,default:"/android.png.webp"},img2:{type:String,default:"/android.png.webp"},description:{type:String,required:!0},syllabus:[{chapter:{type:String,required:!0},topics:[{topicName:{type:String,required:!0},topicLink:{type:String,required:!0},topicProgress:{type:Boolean,default:!1}}]}],progress_status:{type:Number,default:0},createdAt:{type:Date,default:Date.now},certificates:[{certificateId:{type:String}}]}]}),i=n().models.User||n().model("User",o)}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972,23,482],()=>r(44466));module.exports=s})();